#!/usr/bin/env bash

set -e
source ../common/utils.sh
DATE=`date '+%Y-%m-%d %H:%M:%S'`
GENERATESTRING="# Generated by add_ssl_domain_to_nginx.sh ${DATE}"

if [[ $# -eq 0 ]] ; then
    read -p 'Domain: ' DOMAINNAME
else
  DOMAINNAME=$1
fi

SLUGIFYDOMAIN=$(slugify ${DOMAINNAME})

mkdir -p /etc/nginx/certs/
issue_cert() {
  acme.sh --issue -d ${DOMAINNAME} --stateless --key-file /etc/nginx/certs/${DOMAINNAME}.key.pem --fullchain-file  /etc/nginx/certs/${DOMAINNAME}.cert.pem --reloadcmd "sudo service nginx reload"
}


title="You want to install SSL for ${DOMAIN}"
prompt="Pick an option:"
options=("Blank config" "Proxy Upstream" "Static Files")

echo "$title"
PS3="$prompt "
select opt in "${options[@]}" "Quit"; do
    case "$REPLY" in

    1 ) echo "You picked $opt which is option $REPLY";
    issue_cert;
# RENDER TEMPLATE templates/nginx_empty.conf INTO /etc/nginx/conf.d/${SLUGIFYDOMAIN}.conf OVERRIDE
    break;;

    2 ) echo "You picked $opt which is option $REPLY";
    read -p 'upstream ip: ' UPSTREAMIP;
    issue_cert;
    if [[ -z  UPSTREAMIP  ]] ;  then
        UPSTREAMIP="127.0.0.1:9001";
    fi
# RENDER TEMPLATE templates/nginx_upstream.conf INTO /etc/nginx/conf.d/${SLUGIFYDOMAIN}.conf OVERRIDE
    break;;

    3 ) echo "You picked $opt which is option $REPLY";
    issue_cert;
# RENDER TEMPLATE templates/nginx_static.conf INTO /etc/nginx/conf.d/${SLUGIFYDOMAIN}.conf OVERRIDE
    break;;

    $(( ${#options[@]}+1 )) ) echo "Goodbye!"; break;;
    *) echo "Invalid option. Try another one.";continue;;

    esac



done






