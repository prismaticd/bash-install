#!/usr/bin/env bash

set -e
# START-INCLUDE: ../common/utils.sh
slugify() {
echo $1 | iconv -t ascii//TRANSLIT | sed -r s/[~\^]+//g | sed -r s/[^a-zA-Z0-9]+/-/g | sed -r s/^-+\|-+$//g | tr A-Z a-z
}

echo "$(date '+%Y-%m-%d %H:%M:%S') Finished ../common/utils.sh" 
# END-INCLUDE:  ../common/utils.sh
DATE=`date '+%Y-%m-%d %H:%M:%S'`
GENERATESTRING="# Generated by install_ssh_server.sh ${DATE}"

sudo apt install openssh-server -y

# START-RENDERING TEMPLATE 
regex='\$\{([a-zA-Z_][a-zA-Z_0-9]*)\}'
sudo echo "Rendering templates/sshd_config.conf into /etc/ssh/sshd_config"
template=$(echo "IyAvZXRjL3NzaC9zc2hkX2NvbmZpZwoke0dFTkVSQVRFU1RSSU5HfQojIFRoaXMgaXMgYW4gZXhhbXBsZSBvZiBhIGNvbmZpZ3VyYXRpb24gZmlsZSBmb3IgdGhlIHNlcnZlciB5b3Ugd2FudCB0byBjb25uZWN0IHRvCiMgUGFja2FnZSBnZW5lcmF0ZWQgY29uZmlndXJhdGlvbiBmaWxlCiMgU2VlIHRoZSBzc2hkX2NvbmZpZyg1KSBtYW5wYWdlIGZvciBkZXRhaWxzCiMgV2hhdCBwb3J0cywgSVBzIGFuZCBwcm90b2NvbHMgd2UgbGlzdGVuIGZvcgpQb3J0IDIyCiMgVXNlIHRoZXNlIG9wdGlvbnMgdG8gcmVzdHJpY3Qgd2hpY2ggaW50ZXJmYWNlcy9wcm90b2NvbHMgc3NoZCB3aWxsIGJpbmQgdG8KI0xpc3RlbkFkZHJlc3MgOjoKI0xpc3RlbkFkZHJlc3MgMC4wLjAuMApQcm90b2NvbCAyCiMgSG9zdEtleXMgZm9yIHByb3RvY29sIHZlcnNpb24gMgpIb3N0S2V5IC9ldGMvc3NoL3NzaF9ob3N0X3JzYV9rZXkKSG9zdEtleSAvZXRjL3NzaC9zc2hfaG9zdF9kc2Ffa2V5Ckhvc3RLZXkgL2V0Yy9zc2gvc3NoX2hvc3RfZWNkc2Ffa2V5Ckhvc3RLZXkgL2V0Yy9zc2gvc3NoX2hvc3RfZWQyNTUxOV9rZXkKIyBDaXBoZXIgc3VpdGVzCkNpcGhlcnMgY2hhY2hhMjAtcG9seTEzMDVAb3BlbnNzaC5jb20sYWVzMjU2LWdjbUBvcGVuc3NoLmNvbQojUHJpdmlsZWdlIFNlcGFyYXRpb24gaXMgdHVybmVkIG9uIGZvciBzZWN1cml0eQpVc2VQcml2aWxlZ2VTZXBhcmF0aW9uIHllcwojIExvZ2dpbmcKU3lzbG9nRmFjaWxpdHkgQVVUSApMb2dMZXZlbCBJTkZPCiMgQXV0aGVudGljYXRpb246CkxvZ2luR3JhY2VUaW1lIDEyMApQZXJtaXRSb290TG9naW4gbm8KU3RyaWN0TW9kZXMgeWVzClB1YmtleUF1dGhlbnRpY2F0aW9uIHllcwojQXV0aG9yaXplZEtleXNGaWxlICVoLy5zc2gvYXV0aG9yaXplZF9rZXlzCiMgRG9uJ3QgcmVhZCB0aGUgdXNlcidzIH4vLnJob3N0cyBhbmQgfi8uc2hvc3RzIGZpbGVzCklnbm9yZVJob3N0cyB5ZXMKIyBzaW1pbGFyIGZvciBwcm90b2NvbCB2ZXJzaW9uIDIKSG9zdGJhc2VkQXV0aGVudGljYXRpb24gbm8KIyBVbmNvbW1lbnQgaWYgeW91IGRvbid0IHRydXN0IH4vLnNzaC9rbm93bl9ob3N0cyBmb3IgUmhvc3RzUlNBQXV0aGVudGljYXRpb24KI0lnbm9yZVVzZXJLbm93bkhvc3RzIHllcwpYMTFGb3J3YXJkaW5nIHllcwpQcmludE1vdGQgbm8KUHJpbnRMYXN0TG9nIHllcwpUQ1BLZWVwQWxpdmUgeWVzCiMgQWxsb3cgY2xpZW50IHRvIHBhc3MgbG9jYWxlIGVudmlyb25tZW50IHZhcmlhYmxlcwpBY2NlcHRFbnYgTEFORyBMQ18qClN1YnN5c3RlbSBzZnRwIC91c3IvbGliL29wZW5zc2gvc2Z0cC1zZXJ2ZXIKIyBTZXQgdGhpcyB0byAneWVzJyB0byBlbmFibGUgUEFNIGF1dGhlbnRpY2F0aW9uLCBhY2NvdW50IHByb2Nlc3NpbmcsCiMgYW5kIHNlc3Npb24gcHJvY2Vzc2luZy4gSWYgdGhpcyBpcyBlbmFibGVkLCBQQU0gYXV0aGVudGljYXRpb24gd2lsbAojIGJlIGFsbG93ZWQgdGhyb3VnaCB0aGUgQ2hhbGxlbmdlUmVzcG9uc2VBdXRoZW50aWNhdGlvbiBhbmQKIyBQYXNzd29yZEF1dGhlbnRpY2F0aW9uLiAgRGVwZW5kaW5nIG9uIHlvdXIgUEFNIGNvbmZpZ3VyYXRpb24sCiMgUEFNIGF1dGhlbnRpY2F0aW9uIHZpYSBDaGFsbGVuZ2VSZXNwb25zZUF1dGhlbnRpY2F0aW9uIG1heSBieXBhc3MKIyB0aGUgc2V0dGluZyBvZiAiUGVybWl0Um9vdExvZ2luIHdpdGhvdXQtcGFzc3dvcmQiLgojIElmIHlvdSBqdXN0IHdhbnQgdGhlIFBBTSBhY2NvdW50IGFuZCBzZXNzaW9uIGNoZWNrcyB0byBydW4gd2l0aG91dAojIFBBTSBhdXRoZW50aWNhdGlvbiwgdGhlbiBlbmFibGUgdGhpcyBidXQgc2V0IFBhc3N3b3JkQXV0aGVudGljYXRpb24KIyBhbmQgQ2hhbGxlbmdlUmVzcG9uc2VBdXRoZW50aWNhdGlvbiB0byAnbm8nLgpVc2VQQU0geWVzClBlcm1pdEVtcHR5UGFzc3dvcmRzIG5vCkNoYWxsZW5nZVJlc3BvbnNlQXV0aGVudGljYXRpb24gbm8KIyBEaXNhYmxlIHBhc3N3b3JkcywgcmVxdWlyaW5nIGtleXMKUGFzc3dvcmRBdXRoZW50aWNhdGlvbiBubwo=" | base64 --decode)
    while IFS= read -r line; do
        newline=$line
        while [[ "$newline" =~ (\$\{[a-zA-Z_][a-zA-Z_0-9]*\}) ]] ; do
            LHS=${BASH_REMATCH[1]}
            RHS="$(eval echo ""$LHS"")"
            newline=${line//$LHS/$RHS}
        done
        echo "$newline"
    done < <(printf "%s\n" "$template") | sudo tee /etc/ssh/sshd_config > /dev/null 
# END-RENDERING TEMPLATE 
mkdir -p ~/.ssh/
chmod 700 ~/.ssh/
# START-RENDERING TEMPLATE 
regex='\$\{([a-zA-Z_][a-zA-Z_0-9]*)\}'
sudo echo "Rendering templates/authorized_keys into ~/.ssh/authorized_keys"
template=$(echo "c3NoLXJzYSBBQUFBQjNOemFDMXljMkVBQUFBREFRQUJBQUFCQVFDbThjdHlWTUlLeHFEaHF5dk9rdWJ6Wk9JNitYakpYNEdmTVpJdDZoOGorVXQzelA3U0tFcjZ5K0hPaXVWcjNEbnVFbTZTM1hEOVYxcHEwak9Zc0NaTE1iTHl2TVpKdWVaMmltNmc5OTZNdEx5aS9WUEtyVzVEbHppQTNSNitDa2pqanNhVnBuc2VnUzNzUUNOVWpsL0NlQk9qcFZzbEUzZW13R0NSYm9ROCtQSFVpZGNmRFNpUDhoS3RaNEZoZzBoU0hLVGQxQVRPTENYTVpxY0VTa2FPc042TU1IdFJvcjdrbzQ4YU45YXYwektoYWpyU2pjMmlmZmNaRkhNZi90V21oTHo1bEsvZk5yOFpSbmJsSlhUM2twVFhrcTZyRWQ4aUduZFY5SUZJaXU2ckx5cnpMcUc2U3BRL1RqTGt1YkpCSjkvaGFrVkRhOHhRbllUQWN3L04gYmVub2l0LWtleQpzc2gtcnNhIEFBQUFCM056YUMxeWMyRUFBQUFEQVFBQkFBQUJBUUNmemlmYnZIaDZDZTBlbENUWTJ6ZFhwWkhIOVZCVXo4a1lEbUdNWk90T3hoZ0lubXR6Qm9jaGhIb0U2WXZyd2JNV3N4anN0b2FmNXBhRkdlU3ZLZVBQd0JBbnpyakU3QUhIQ3QzSWVTVEw4a20vZ0dpR0NMQk14c0VhTWRkNmFLblRrVEx4ZGt4dzU2d1dBeFJtbU9LVEk4TFg2US9tNjg1NXVncVJpaXJwa09FbjRBSnptSnJlUTRHdVY4eGo4UjBUTEoyRkJXRFFBK3lJT2ZUWDZWcFZHRWZVVmR4QzF1WHd2S2Z3R0NYZkFvLzhwRDN5bjdMVWVuRkFQVUhUMlV6WW9zUzg1bmYyS0RmZnJCSFZQYkxPbnpsYTNsRW1HN1BmK2RBYXU3OVdIbWdwSkNYQTY0Z0tpSDlqa2NrOUNtWjVmRkRpbFFvOXAyb2Z6Tk5xdkUvaiBqb2huY0Bqb2huYy1IUC1Qcm9Cb29rLTQ1MC1HNQpzc2gtcnNhIEFBQUFCM056YUMxeWMyRUFBQUFEQVFBQkFBQUNBUUQybjlpZ083R1NWWkkyNks5elM3RlVTNWNIdHE2MU9qVXZGejkwTjVETy9US0ZBbUhDcWpzRU1ydDVXbThiL3ZRakd6Y3YwY2ZQQzdSQnRmWnl6M3J5bWJDQ2tuRmwrOFZ5K2pnbGw3UWJBWjF5SzRHM051Zm4wZmVjaCtWQlowTUo1NkZWZ0laVzFYZ3RRUVlqaHNEV1l0OGlKdloxZmU5emkraHExdXU1UHNOdnd5WFU3UTQ0Q29ieWlpUFN1MlZrY1NlVzlyM3pUNitaZC9IK25NTFVVQ2QzZEFTemdNdmtZRlNISUhHL1NzTnRLSHU0d0NrVThIenl0cTFnSnNlQ25pTmJ2L1dzWWI0MXF4SkZmVFU5cDJJcXZqUHdSL21Ram1QTlFEVnFxR3JJZlFETHd2V253M2tLUmIvUVlBZ3ZEckZkclNvd29uYmc1SWZSWWUrdmJoeTRod2NKVTBBaXVha1RVdDEvWjVJMzNKSG9qbkpzbERSUU9jQ1lhZ2RxeEw4a1V4MXB2cGYxdERicUZmUmU5OEhxenIwNC9uQWJLaUJ6Rm12ZW9hVFpiOVFqYlJPaDhaZ0E4dXBNY1BabzQzNTcyRHNaaEZDc3RZZGc3MEcrTVYxS2NGenJoZTJFUkg2QVJDM0cybXBtRlhWcmRoMmwrSTBRUWh2cWpnZkdZcDlYTmpiM01EL0ZSN3ZOV3MwRlB4dWVBYUNGV3poOUlDQmlPemJPbzNLZm0rME1pbkdSeFE4eE5QUTZ5VE0rSE9pMU5IcDRaMEdrYnZhRG0zTWpjMFM0Z0xERzZyUmdNU3Q2WlNXL05kcTFaUVFRSG8wK0J0MWgwWWFQejFJcGxFZVRpK0kyeFp1Rlk0OExEdWQyemhnRWlZOFFYd01wVHhtUlFkK2N6UT09IEphY29iCnNzaC1yc2EgQUFBQUIzTnphQzF5YzJFQUFBQURBUUFCQUFBQ0FRRFZ0dmZvNk9MTGxyK3JFbWFYQlpZYlVPZjVMemR6c29mekxuZk9YaFpPNVZQNWQ4bCtDNm4vRXFXZ2J6eUY5OElXRWMwMVUxcFB6Mzlzb1AwMFlpc3U0bG1PS0h2RDhpSmh1ZHV6Wm9UbEhhRWU5Mk40YmVreEl0dXdvSk5ONUI2L3h1U1VUbDc2L0gvVTJyZzZ6azZjS0FQdHRhdTRPRnlCeGVYM2dKUFkvRzFvajNxQkN5NlNzQTBFYnZXa09zZDRuUGwyNHF4dzZhRkNHQzlTTm96dWQ2bFRHNEhpcVpMWkRURVZET0UvM3dPRlJicThNQ083bjAzVFZVQjNXZW9laFJWT2t2SW1FQXYvbTlpYkw3bkFEQ0V3NU9XR1JyZnl6aG1TMXFWMkp2RWNUS0dYMTFvNUJMSmQ4WnJHWkFLc1BLTURXMkEzMERHcUNvMjlaaHhqSEl2WHhZK3NNT3Q4d1dRUE9JcG54enpGNDZzNkZTNDNrcHcwVDdxUGxjWDNIakJZQXlGVm5uU1RHVExFTThGZkFFSkxUcEEwNzZseXp1bUp3UjU4dVllMFlheEc3c1JKbm8veUpIWHNMc0hiQ2UxdGtYWWwyZE1XSFdDMjg4eGVUaTJQTTE4bmd5RGxHUFB2SFRsUnZqeDhzbmpUaGszZCtoRHBLVWlwazl1WVhhZG04MmZKb3JUTXZvRDdRZ2R3UkFvd2tnalN6eEFOSkJScTdsMjFzTFRLaS9BeXVRK3hleUduRTZucnhCQy85RHN5MjJTaEZpWm1KaGZJVXo1Ui9JUHNwdlh5YlJOTUlwL25vNFRneS9jOGlGb1d6WVN1UjBybElJdUFBZEdUUVdraWw0eXp5QmVncEJqVXJ2NkFDU3czZDlVYUhvb2JtNkQybklPOG9RPT0gY2FtZXJvbi5zbWl0aEBwcmlzbWF0aWNkaWdpdGFsLmNvbQpzc2gtcnNhIEFBQUFCM056YUMxeWMyRUFBQUFEQVFBQkFBQUJBUURPbVVCTlgzWWFDaUNTbzQwVTI3SlUvUkloa3NEaTJkZlJJRGNvbjF4b0FRd2FXZFZMS1F4TGNnODJqMWQrUEpPTDBFcFJSWHludFNzekx6MkgrYXlmd0Rla1ZZSUhuZFBHemN5dHJZMm5LUzNNQUhCQnpGZHZla3V4Um5rWko4b1ZvRXV2dlhoandIOWE2Y3QxTDZDdDdOdkVXRkhRK04vVnUzZFJUSEd4ZU5ySDVOVnIxNTlhQXd4K09JMHJjWG10S0g5ZnRvT0t2VkFQaHZTU05OMEhGV2tGQ21lbVdSYWJIWnJFbEM4ejNOMjFSSFBjWUxrZjg4RHpodGtkcC9kUjhUZVd4TU51Y01Zc3J5aDluYVkxTXMwK2c2SElrMDFRdDZrWWtkc2w4SktVODUvM3gyeGpsMSs2SkdZOVlHdVI5NXliRWtSQnlCSWVOTmFjWjAzQiBqb2huY0Bob21lLWRlc2t0b3AKc3NoLXJzYSBBQUFBQjNOemFDMXljMkVBQUFBREFRQUJBQUFCQVFDbjBoRG92Rkw0b3JsdHE0RXhkS2dIc0xGdkp0TC9QdU4zK2tPZy93RW9Fc3loTW5IWDVKbG1mSHViem1RZEl5aHZwaHBvN1JpQ2tLeEJjbTlzcmpjbnVJRE50eUdNN2JYd2p2T3d5cHA3ZmlmaE5ycFZNRE1RSGN6L0RDWDJBY3BKcG1kSHVVVEREa3UvODRjRnVqdWptZjROR0ZsbXhJRFUrQ29PQzIxVWNDdFZldjNoTzhTTmVhb3hrNG45cmJBZGlHUjVxVnRad2YyaVI1bENTOEt6NHBGKzFzVUxqVHgxSlhSU3hzSCtPaTVtQnhlL2xzL0REc2NYTkR5MWNwMTN6YlpONUJ3RUJiSWJwdzFkdTV5WHdQVVVnK2ViZXVYZi9YV0YxNzlsamNSTzVranE4VzZXa1RUMENZbUx0NG40YjhZMUdMQ2JFWGJRdGlMWlBEMTkgamFjb2JtQHByaXNtYXRpYy01CnNzaC1yc2EgQUFBQUIzTnphQzF5YzJFQUFBQURBUUFCQUFBQ0FRREFMMjZHcWxqY3cxU2c2MS9TM2h3U3BIbXRlUUZVb3ZTMTMrVi9HQjFjdjhXTmhKenpvZjZlWm5RRHN4YmxsUFRZQ3MybkVuMzhVT09yc1JwNk01NUt2WithUis2ZHZuUyt1SXpFTzVub1FWZkhrWEJXajhZVUZxaytBNUNXZHRYWFRKRUlYMTg4S29saGJCeGNnVjh2UHdlNW5UUVhEd1RnQXJXa1BEekdaTmlJSW1Nd2ZpWUsra1Q0bXV5Z0Z5K2NORmhiR2Q1ME80dkNpc1VDSXlaK25tMk4ya0FWSEl0RHBIaEpZL3B3K1p6MVR5ZkpQa2FQVHZBMVcvMkc5QlJyRUY1M2xoSURVSGZTMUdGcTZ4Y3pWU3A0b0FYOERaS0NJMVcwdlRsMTh5RExrNlloUFRYd1VzMjVlTlNKbmI4UHFCNjdpTy9wZE8vdWo4V0dnNTIzRmswYWJGVm00Z0RjNlRKSm1VT291cnlKRTIyK3MzQUpQQ0N6VUd1LzdYRE5MYW5pMG1IclBrTWx0R1ozL09Dc0FXOUdoeHc5WWxFWHZiM0JOcnozSEl4L3FTaFQrT0Ezc0wvdlQ4QWxnQ0R2Y1dSckVPeEhSOFZFdmdlamkwV01MekJ5WnUvRXRLZzZ5WTRuSWgwTDlPR2QyRnk4TURnT3pvTmpoMTc3TXUyWE1xcGVEVTg2UjdtWHhHeFc4UEZaUDlFaTZYY2J2REtPOHNIZ2RGUkkyYmZENmMwSEpKZ3B2WWhSQVJ0ZmpwZ3VsNE9DcTZZaUcvaXJuZDlSaFc1RkVzeHhqVWF2OUtOMlR3ckVYU2wvaWpkd0ZMM1JsTXZadHp0YmFpUFdsQzZWVnpHVSswTG1wZER1K05qV2tVNkpSZ1Z6dGxFZjVvYlBNNnhBekNtaVZRPT0gdHVubmVsQHByaXNtYXRpYy0xCg==" | base64 --decode)
    while IFS= read -r line; do
        newline=$line
        while [[ "$newline" =~ (\$\{[a-zA-Z_][a-zA-Z_0-9]*\}) ]] ; do
            LHS=${BASH_REMATCH[1]}
            RHS="$(eval echo ""$LHS"")"
            newline=${line//$LHS/$RHS}
        done
        echo "$newline"
    done < <(printf "%s\n" "$template") | sudo tee ~/.ssh/authorized_keys > /dev/null 
# END-RENDERING TEMPLATE 

ME=$(whoami)
sudo chown ${ME}:${ME} ~/.ssh/authorized_kedjango ys
echo "$(date '+%Y-%m-%d %H:%M:%S') Finished /home/benoit/git/bash-install/install/ssh/install_ssh_server.sh" 